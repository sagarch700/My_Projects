from game_data import data
from art import logo, vs
import random
import os

def get_data(option):

    ''' This function generates a random list of data from the game data

    Args:
        data (list of dictionaries) : list of dictionaries containing the game data.

    Returns:
        [name, profession, country, follower_count]

    '''

    name = option["name"]
    profession = option["description"]
    country = option["country"]
    follower_count = option["follower_count"]
    return [name, profession, country, follower_count]

def compare(follower_count_a, follower_count_b, guess):

    ''' This function compares follower counts
    
    Args:
        follower_count_a (int) : Follower count of option a.
        follower_count_b (int) : Follower count of option b.
        guess (str) : which one has more more followers 'a' or 'b'.

    Returns:
        you're right! current score: {score}
        Sorry, that's wrong. Final score: {score}

    '''

    global score
    global end_game
    if guess == 'a' and follower_count_a > follower_count_b:
        score += 1
        return f"you're right! current score: {score}"
    elif guess == 'a' and follower_count_a < follower_count_b:
        end_game = True
        return f"Sorry, that's wrong. Final score: {score}"
    elif guess == 'b' and follower_count_a > follower_count_b:
        end_game = True
        return f"Sorry, that's wrong. Final score: {score}"
    elif guess == 'b' and follower_count_a < follower_count_b:
        score +=1
        return f"you're right! current score: {score}"

def random_selection(previous_choice):

    ''' This function returns a unique choice every time
    
    Args:
        previous_choice (dict) : To compare against the previous choice generated by this function.

    Returns:
        Returns a dictionary

    '''

    choice = data[random.randint(0, len(data))]
    while choice == previous_choice:
        choice = data[random.randint(0, len(data))]
    return choice


def highlower_game():
    
    ''' This functions is to play the highlower game and keeps track of the scores. '''

    os.system("clear")
    print(logo)

    option_a = dict()
    option_b = dict()

    while not end_game:
        if option_a == {}:
            option_a = random_selection({})
            option_b = random_selection(option_a)
        else:
            option_a = option_b
            option_b = random_selection(option_a)
        option_a_data = get_data(option_a)
        option_b_data = get_data(option_b)
        print(f"compare A: {option_a_data[0]}, a {option_a_data[1]}, from {option_a_data[2]}")
        print(vs)
        print(f"compare B: {option_b_data[0]}, a {option_b_data[1]}, from {option_b_data[2]}")
        guess = input("Who has more followers? Type 'A' or 'B': ").lower()
        result = compare(follower_count_a = option_a_data[3], follower_count_b = option_b_data[3], guess = guess)
        os.system("clear")
        print(logo)
        print(result)

score = 0
end_game = False
restart_game = True

highlower_game()



        




    




